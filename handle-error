 const [errorMessages, setErrorMessages] = useState({});

    const [isSubmitted, setIsSubmitted] = useState(false);

    const[showForgotPassword,setShowForgotPassword]=useState(false);

    const handleForgotPasswordClick=(event)=>{

        event.preventDefault();

        setShowForgotPassword(!showForgotPassword);




    };




    // User Login info

    const database = [

        {

            username: "user1",

            password: "pass1"

        },

        {

            username: "user2",

            password: "pass2"

        }

    ];




    const errors = {

        uname: "invalid username",

        pass: "invalid password"

    };




    const handleSubmit = (event) => {

        //Prevent page reload

        event.preventDefault();




        var { uname, pass } = document.forms[0];




        // Find user login info

        const userData = database.find((user) => user.username === uname.value);




        // Compare user info

        if (userData) {

            if (userData.password !== pass.value) {

                // Invalid password

                setErrorMessages({ name: "pass", message: errors.pass });

            } else {

                setIsSubmitted(true);

            }

        } else {

            // Username not found

            setErrorMessages({ name: "uname", message: errors.uname });

        }

    };




    // Generate JSX code for error message

    const renderErrorMessage = (name) =>

        name === errorMessages.name && (

            <div className="error">{errorMessages.message}</div>

        );




    // JSX code for login form

    const renderForm = (

        <div className="form">

            <div className="title">

                    <img 

                </div>

            <form onSubmit={handleSubmit}>

                <div className="input-container">

                    <label>Username</label>

                    <input type="text" name="uname" placeholder="Username" required />

                    {renderErrorMessage("uname")}

                </div>

                <div className="input-container ">




                    <label>Password </label>




                    <input type="password" name="pass" required />

                    {renderErrorMessage("pass")}

                    <a class="label-link " href="/password_reset" onClick={handleForgotPasswordClick}> Forgot Password?</a>

                    {showForgotPassword?(<ForgotPassword/>):null}

                </div>

                <div className="button-container">

                    <input type="submit" value="Login" />

                </div>

            </form>

        </div>

    );
